{
  "name": "happy-tts-gradio",
  "version": "1.0.0",
  "description": "Happy TTS with Gradio-like interface",
  "main": "dist/app.js",
  "sideEffects": true,
  "scripts": {
    "start": "concurrently \"node dist/app.js\" \"serve -s public -l 3001\" \"serve -s docs -l 3002\"",
    "start:file": "USER_STORAGE_MODE=file concurrently \"node dist/app.js\" \"serve -s public -l 3001\" \"serve -s docs -l 3002\"",
    "dev": "concurrently \"npm run dev:backend\" \"npm run dev:frontend\"",
    "dev:file": "USER_STORAGE_MODE=file concurrently \"npm run dev:backend\" \"npm run dev:frontend\"",
    "dev:backend": "nodemon --watch src -e ts --exec ts-node src/app.ts",
    "dev:frontend": "cd frontend && npm run dev",
    "dev:docs": "cd frontend/docs && npm start",
    "start:docs": "cd frontend/docs && npm run serve",
    "build": "npm run build:backend && npm run build:frontend && npm run build:docs",
    "build:simple": "npm run build:backend && npm run build:frontend:simple && npm run build:docs:simple",
    "build:minimal": "npm run build:backend && npm run build:frontend:minimal && npm run build:docs:minimal",
    "build:backend": "tsc && npm run obfuscate",
    "build:backend:clean": "rm -rf dist && tsc && npm run obfuscate",
    "obfuscate": "javascript-obfuscator dist --output dist-obfuscated --config package.json",
    "build:frontend": "cd frontend && npm run build",
    "build:frontend:simple": "cd frontend && npm run build:simple",
    "build:frontend:minimal": "cd frontend && npm run build:minimal",
    "build:docs": "cd frontend/docs && npm run build",
    "build:docs:simple": "cd frontend/docs && npm run build:simple",
    "build:docs:minimal": "cd frontend/docs && npm run build:no-git",
    "prod": "npm run build && npm start",
    "test": "jest --forceExit --detectOpenHandles",
    "test:watch": "jest --watch --forceExit --detectOpenHandles",
    "test:coverage": "jest --coverage --forceExit --detectOpenHandles",
    "test:clean": "node scripts/test-cleanup.js",
    "test:auth": "jest --testPathPattern=authController.test.ts",
    "test:rate-limit": "jest --testPathPattern=rateLimit.test.ts",
    "test:db-init": "node scripts/test-database-init.js",
    "test:performance": "jest performance.test.ts",
    "test:concurrency": "jest concurrency.test.ts",
    "test:ci": "jest --ci --runInBand --coverage --reporters=default --reporters=jest-junit",
    "generate:openapi": "node scripts/generate-openapi.js",
    "check:api-docs": "node scripts/check-api-docs.js",
    "check:openapi-json": "node scripts/check-openapi-json.js",
    "analyze:bundle": "npm run build:backend && npm run analyze:size",
    "analyze:size": "node -e \"const fs=require('fs');const path=require('path');const dir='dist';const files=fs.readdirSync(dir).filter(f=>f.endsWith('.js'));let total=0;files.forEach(f=>{const size=fs.statSync(path.join(dir,f)).size;total+=size;console.log(f+' '+Math.round(size/1024)+'KB')});console.log('Total: '+Math.round(total/1024)+'KB')\"",
    "analyze:full": "node scripts/analyze-bundle.js",
    "analyze:frontend": "cd frontend && npm run build:analyze",
    "analyze:backend": "npm run build:backend && npm run analyze:size",
    "check:unused-deps": "npx depcheck",
    "check:tree-shaking": "npm run analyze:full && echo '检查完成，请查看上面的分析结果'",
    "check:tree-shaking-config": "node scripts/check-tree-shaking.js",
    "docker:build": "scripts/build-docker.sh",
    "docker:build:win": "scripts\\build-docker.bat",
    "docker:build:simple": "docker build --platform linux/amd64 --memory=4g --memory-swap=4g -t happy-tts:simple .",
    "docker:build:minimal": "docker build --platform linux/amd64 --memory=2g --memory-swap=2g -t happy-tts:minimal ."
  },
  "keywords": [
    "happy",
    "tts"
  ],
  "author": "",
  "license": "MIT",
  "dependencies": {
    "@fingerprintjs/fingerprintjs": "^4.6.2",
    "@simplewebauthn/browser": "^13.1.2",
    "@simplewebauthn/server": "^13.1.2",
    "@types/bcrypt": "^5.0.2",
    "@types/dompurify": "^3.2.0",
    "@types/express-rate-limit": "^6.0.2",
    "@types/form-data": "^2.5.2",
    "@types/jsdom": "^21.1.7",
    "@types/jsonwebtoken": "^9.0.10",
    "@types/uuid": "^10.0.0",
    "@types/validator": "^13.15.2",
    "axios": "^1.6.7",
    "bcrypt": "^6.0.0",
    "cheerio": "^1.1.0",
    "cors": "^2.8.5",
    "crypto-js": "^4.2.0",
    "dayjs": "^1.11.13",
    "dompurify": "^3.2.6",
    "dotenv": "^17.2.0",
    "express": "^4.18.3",
    "express-rate-limit": "^7.5.0",
    "form-data": "^4.0.3",
    "happy-tts-gradio": "file:",
    "helmet": "^8.1.0",
    "jsdom": "^26.1.0",
    "jsonwebtoken": "^9.0.2",
    "liquid-glass-react": "^1.1.1",
    "marked": "^16.0.0",
    "mongoose": "^8.16.3",
    "morgan": "^1.10.0",
    "multer": "^2.0.1",
    "mysql2": "^3.14.2",
    "openai": "^5.9.2",
    "qrcode": "^1.5.4",
    "react-syntax-highlighter": "^15.6.1",
    "resend": "^4.7.0",
    "serve": "^14.2.1",
    "speakeasy": "^2.0.0",
    "swagger-jsdoc": "^6.2.8",
    "swagger-ui-express": "^5.0.1",
    "uuid": "^11.1.0",
    "validator": "^13.15.15",
    "winston": "^3.11.0"
  },
  "devDependencies": {
    "@types/axios": "^0.14.4",
    "@types/cheerio": "^1.0.0",
    "@types/cors": "^2.8.17",
    "@types/crypto-js": "^4.2.2",
    "@types/express": "^4.17.21",
    "@types/jest": "^30.0.0",
    "@types/morgan": "^1.9.4",
    "@types/multer": "^2.0.0",
    "@types/node": "^24.0.14",
    "@types/qrcode": "^1.5.5",
    "@types/react-syntax-highlighter": "^15.5.13",
    "@types/speakeasy": "^2.0.10",
    "@types/supertest": "^6.0.3",
    "@types/swagger-jsdoc": "^6.0.4",
    "@types/swagger-ui-express": "^4.1.8",
    "concurrently": "^9.1.2",
    "javascript-obfuscator": "^4.1.1",
    "jest": "^30.0.4",
    "nodemon": "^3.1.0",
    "supertest": "^7.1.3",
    "ts-jest": "^29.4.0",
    "ts-node": "^10.9.2",
    "typescript": "^5.8.3"
  }
}
